/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentation;
import business.Aluno;
import business.AlunoExisteException;
import business.AlunoNaoExisteException;
import business.ParametrosInvalidosException;
import business.Quota;
import business.QuotaExisteException;
import business.SGQ;
import data.SGQData;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.time.LocalDate;
import java.util.Map;
import java.util.Observable;
import java.util.Observer;
import javax.swing.DefaultListModel;
import business.QuotaJaEstaPagaException;
import business.QuotaNaoExisteException;
import java.time.Month;

/**
 *
 * @author MIEIgroup
 */
public class JSGQ extends javax.swing.JFrame implements Observer {

    private SGQ sistema; // singleton -> modelo de um unico objeto
    
    /**
     * Creates new form JSGQ
     */
    public JSGQ() {
        initComponents();
        
        try{
            this.sistema = SGQData.load(SGQData.filename);
        }
        catch(FileNotFoundException e){
            e.printStackTrace();
            this.sistema = new SGQ();
            this.populateSystem();
        } catch (IOException e) {
            e.printStackTrace();
            this.sistema = new SGQ();
            this.populateSystem();
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
            this.sistema = new SGQ();
            this.populateSystem();
        }
        
        this.sistema.addObserver(this); // esta janela observa o SGQ  
        this.updateJlist(); // atualiza a lista de Sócios
    }
    
    private void populateSystem() {
        try {
            this.sistema.addAluno("a82880", "José Pereira", "M", 21, "...");
            this.sistema.addAluno("a81744", "Ricardo Petronilho", "M", 20, "...");
            this.sistema.addAluno("a79034", "Rafaela Soares", "F", 21, "...");
            this.sistema.addAluno("a82145", "Filipa Parente", "F", 20, "...");
            
            this.sistema.registarQuota("a82880", LocalDate.now(), LocalDate.of(2018, Month.OCTOBER, 21), 20f);
            this.sistema.registarQuota("a82880", LocalDate.now(), LocalDate.of(2018, Month.NOVEMBER, 21), 20f);
            this.sistema.registarQuota("a82880", LocalDate.now(), LocalDate.of(2018, Month.DECEMBER, 21), 20f);
            
            this.sistema.registarQuota("a81744", LocalDate.now(), LocalDate.of(2019, Month.JANUARY, 10), 10f);
            this.sistema.registarQuota("a81744", LocalDate.now(), LocalDate.of(2019, Month.FEBRUARY, 10), 10f);
            
            this.sistema.registarQuota("a79034", LocalDate.now(), LocalDate.of(2019, Month.FEBRUARY, 10), 15f);
            this.sistema.registarQuota("a79034", LocalDate.now(), LocalDate.of(2019, Month.FEBRUARY, 10), 15f);
            
            this.sistema.registarQuota("a82145", LocalDate.now(), LocalDate.of(2019, Month.FEBRUARY, 10), 15f);
            this.sistema.registarQuota("a82145", LocalDate.now(), LocalDate.of(2019, Month.FEBRUARY, 10), 15f);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        listaSociosScrollPane = new javax.swing.JScrollPane();
        listaSociosJList = new javax.swing.JList<>();
        menuBar = new javax.swing.JMenuBar();
        opcoesMenuBar = new javax.swing.JMenu();
        registarButtonMenuBar = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sistema Gestão de Quotas");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        listaSociosJList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Não existem sócios ainda registados" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listaSociosJList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listaSociosJList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaSociosJListMouseClicked(evt);
            }
        });
        listaSociosScrollPane.setViewportView(listaSociosJList);

        opcoesMenuBar.setText("Opções");

        registarButtonMenuBar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        registarButtonMenuBar.setText("Registar");
        registarButtonMenuBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registarButtonMenuBarActionPerformed(evt);
            }
        });
        opcoesMenuBar.add(registarButtonMenuBar);

        exitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        exitMenuItem.setText("Sair");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        opcoesMenuBar.add(exitMenuItem);

        menuBar.add(opcoesMenuBar);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(listaSociosScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(listaSociosScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void registarButtonMenuBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registarButtonMenuBarActionPerformed
        new JRegistarAluno(this).setVisible(true);
    }//GEN-LAST:event_registarButtonMenuBarActionPerformed

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        try {
            SGQData.save(sistema, SGQData.filename);
        } catch (IOException e) {
            e.printStackTrace();
        }
        finally {
            System.exit(0);
        }
    };//GEN-LAST:event_exitMenuItemActionPerformed

    private void listaSociosJListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaSociosJListMouseClicked

        if (evt.getClickCount() == 2) { // double-click
            String numero = this.listaSociosJList.getSelectedValue().split(" | ")[0]; // posição na Jlist do Aluno selecionado 
            new JVisualizarQuotas(this, numero).setVisible(true);
        }
    }//GEN-LAST:event_listaSociosJListMouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            SGQData.save(sistema, SGQData.filename);
        } catch (IOException e) {
            e.printStackTrace();
        }
        finally {
            System.exit(0);
        }
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JSGQ.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JSGQ.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JSGQ.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JSGQ.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JSGQ().setVisible(true);
            }
        });
    }
    
    public void addAluno(String numero, String nome, String sexo, int idade, String morada) throws AlunoExisteException, ParametrosInvalidosException {
        this.sistema.addAluno(numero,nome,sexo,idade,morada);
    }
    
    public void addObserverToAluno(Observer o, String cod) throws AlunoNaoExisteException {
        this.sistema.addObserverToAluno(o, cod);
    } 
    
    public Map<String, Quota> getQuotas(String cod) throws AlunoNaoExisteException {
        return this.sistema.getQuotas(cod);
    }
    
    public void registarQuota(String numero, LocalDate dataInicio, LocalDate dataFim, float valor) throws QuotaExisteException, ParametrosInvalidosException, AlunoNaoExisteException {
        this.sistema.registarQuota(numero, dataInicio, dataFim, valor);
    }
    
    public void pagarQuota(String id, String numero) throws QuotaJaEstaPagaException, AlunoNaoExisteException, QuotaNaoExisteException {
        this.sistema.pagarQuota(id, numero);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JList<String> listaSociosJList;
    private javax.swing.JScrollPane listaSociosScrollPane;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu opcoesMenuBar;
    private javax.swing.JMenuItem registarButtonMenuBar;
    // End of variables declaration//GEN-END:variables

    /**
     * Atualiza a lista de Sócios apresentada na janela.
     */
    public void updateJlist() {
        DefaultListModel model = new DefaultListModel(); // abstracao visual dos dados
        for(Aluno a: this.sistema.getAlunos().values()){
            model.addElement(a.getNumero()+" | "+a.getNome());
        }
        this.listaSociosJList.setModel(model);
    }
    
    @Override
    public void update(Observable o, Object arg) {
        this.updateJlist();
    }   
}
